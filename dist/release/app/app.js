function RadarChart(id,data,options){function wrap(text,width){text.each(function(){for(var word,text=d3.select(this),words=text.text().split(/\s+/).reverse(),line=[],lineNumber=0,lineHeight=1.4,y=text.attr("y"),x=text.attr("x"),dy=parseFloat(text.attr("dy")),tspan=text.text(null).append("tspan").attr("x",x).attr("y",y).attr("dy",dy+"em");word=words.pop();)line.push(word),tspan.text(line.join(" ")),tspan.node().getComputedTextLength()>width&&(line.pop(),tspan.text(line.join(" ")),line=[word],tspan=text.append("tspan").attr("x",x).attr("y",y).attr("dy",++lineNumber*lineHeight+dy+"em").text(word))})}var cfg={w:600,h:600,margin:{top:20,right:20,bottom:20,left:20},levels:3,maxValue:0,labelFactor:1.25,wrapWidth:60,opacityArea:.35,dotRadius:4,opacityCircles:.1,strokeWidth:2,roundStrokes:!1,color:d3.scale.category10()};if("undefined"!=typeof options)for(var i in options)"undefined"!=typeof options[i]&&(cfg[i]=options[i]);var maxValue=Math.max(cfg.maxValue,d3.max(data,function(i){return d3.max(i.map(function(o){return o.value}))})),allAxis=data[0].map(function(i,j){return i.axis}),total=allAxis.length,radius=Math.min(cfg.w/2,cfg.h/2),Format=cfg.format,angleSlice=2*Math.PI/total,rScale=d3.scale.linear().range([0,radius]).domain([0,maxValue]);d3.select(id).select("svg").remove();var svg=d3.select(id).append("svg").attr("width",cfg.w+cfg.margin.left+cfg.margin.right).attr("height",cfg.h+cfg.margin.top+cfg.margin.bottom).attr("class","radar"+id),g=svg.append("g").attr("transform","translate("+(cfg.w/2+cfg.margin.left)+","+(cfg.h/2+cfg.margin.top)+")"),filter=g.append("defs").append("filter").attr("id","glow"),feMerge=(filter.append("feGaussianBlur").attr("stdDeviation","2.5").attr("result","coloredBlur"),filter.append("feMerge")),axisGrid=(feMerge.append("feMergeNode").attr("in","coloredBlur"),feMerge.append("feMergeNode").attr("in","SourceGraphic"),g.append("g").attr("class","axisWrapper"));axisGrid.selectAll(".levels").data(d3.range(1,cfg.levels+1).reverse()).enter().append("circle").attr("class","gridCircle").attr("r",function(d,i){return radius/cfg.levels*d}).style("fill","#CDCDCD").style("stroke","#CDCDCD").style("fill-opacity",cfg.opacityCircles).style("filter","url(#glow)"),axisGrid.selectAll(".axisLabel").data(d3.range(1,cfg.levels+1).reverse()).enter().append("text").attr("class","axisLabel").attr("x",4).attr("y",function(d){return-d*radius/cfg.levels}).attr("dy","0.4em").style("font-size","10px").attr("fill","#737373").text(function(d,i){return Format(maxValue*d/cfg.levels)});var axis=axisGrid.selectAll(".axis").data(allAxis).enter().append("g").attr("class","axis");axis.append("line").attr("x1",0).attr("y1",0).attr("x2",function(d,i){return rScale(1.1*maxValue)*Math.cos(angleSlice*i-Math.PI/2)}).attr("y2",function(d,i){return rScale(1.1*maxValue)*Math.sin(angleSlice*i-Math.PI/2)}).attr("class","line").style("stroke","white").style("stroke-width","2px"),axis.append("text").attr("class","legend").style("font-size","11px").attr("text-anchor","middle").attr("dy","0.35em").attr("x",function(d,i){return rScale(maxValue*cfg.labelFactor)*Math.cos(angleSlice*i-Math.PI/2)}).attr("y",function(d,i){return rScale(maxValue*cfg.labelFactor)*Math.sin(angleSlice*i-Math.PI/2)}).text(function(d){return d}).call(wrap,cfg.wrapWidth);var radarLine=d3.svg.line.radial().interpolate("linear-closed").radius(function(d){return rScale(d.value)}).angle(function(d,i){return i*angleSlice});cfg.roundStrokes&&radarLine.interpolate("cardinal-closed");var blobWrapper=g.selectAll(".radarWrapper").data(data).enter().append("g").attr("class","radarWrapper");blobWrapper.append("path").attr("class","radarArea").attr("d",function(d,i){return radarLine(d)}).style("fill",function(d,i){return cfg.color(i)}).style("fill-opacity",cfg.opacityArea).on("mouseover",function(d,i){d3.selectAll(".radarArea").transition().duration(200).style("fill-opacity",.1),d3.select(this).transition().duration(200).style("fill-opacity",.7)}).on("mouseout",function(){d3.selectAll(".radarArea").transition().duration(200).style("fill-opacity",cfg.opacityArea)}),blobWrapper.append("path").attr("class","radarStroke").attr("d",function(d,i){return radarLine(d)}).style("stroke-width",cfg.strokeWidth+"px").style("stroke",function(d,i){return cfg.color(i)}).style("fill","none").style("filter","url(#glow)"),blobWrapper.selectAll(".radarCircle").data(function(d,i){return d}).enter().append("circle").attr("class","radarCircle").attr("r",cfg.dotRadius).attr("cx",function(d,i){return rScale(d.value)*Math.cos(angleSlice*i-Math.PI/2)}).attr("cy",function(d,i){return rScale(d.value)*Math.sin(angleSlice*i-Math.PI/2)}).style("fill",function(d,i,j){return cfg.color(j)}).style("fill-opacity",.8);var blobCircleWrapper=g.selectAll(".radarCircleWrapper").data(data).enter().append("g").attr("class","radarCircleWrapper");blobCircleWrapper.selectAll(".radarInvisibleCircle").data(function(d,i){return d}).enter().append("circle").attr("class","radarInvisibleCircle").attr("r",1.5*cfg.dotRadius).attr("cx",function(d,i){return rScale(d.value)*Math.cos(angleSlice*i-Math.PI/2)}).attr("cy",function(d,i){return rScale(d.value)*Math.sin(angleSlice*i-Math.PI/2)}).style("fill","none").style("pointer-events","all").on("mouseover",function(d,i){newX=parseFloat(d3.select(this).attr("cx"))-10,newY=parseFloat(d3.select(this).attr("cy"))-10,tooltip.attr("x",newX).attr("y",newY).text(Format(d.value)).transition().duration(200).style("opacity",1)}).on("mouseout",function(){tooltip.transition().duration(200).style("display","none")});var tooltip=g.append("text").attr("class","tooltip").style("opacity",0)}angular.module("SportsensusApp",["ngMaterial","ngRoute","ngCookies","Views"]).config(["$locationProvider","$routeProvider",function($locationProvider,$routeProvider){$locationProvider.hashPrefix("!"),$routeProvider.when("/",{template:"<home-dir></home-dir>"}).when("/infobox/",{template:"<infobox-dir></infobox-dir>"}).when("/login/",{template:"<login-dir></login-dir>"}).otherwise("/")}]).run(["ConfigSrv",function(ConfigSrv){var config=window.appConfig;ConfigSrv.set(config)}]),function(){"use strict";function ApiSrv($rootScope,$http,$q,$cookies,ConfigSrv){function readSidCookie(){return $cookies.get(sidCookieName)}function writeSidCookie(sid){$cookies.put(sidCookieName,sid)}function clearUser(){sid=null,userRights=null}function setUser(_sid,rights){sid=_sid,userRights=rights,writeSidCookie(sid),getTranslations()}function getUser(){return{sid:sid,userRights:userRights}}function prepareRequestData(method,params){var data={jsonrpc:"2.0",method:method,params:params,id:"id"};return data}function auth(par){var d=$q.defer(),params={login:par.login,password:par.password},data=prepareRequestData("auth",params);return $http.post(url,data).then(function(response){response.data.result?(setUser(response.data.result.sid,response.data.result.acl),d.resolve(response)):(clearUser(),d.reject(response))},function(response){clearUser(),d.reject(response)}),d.promise}function checkSession(_sid){var d=$q.defer(),checkedSid=_sid||sid,params={sid:checkedSid},data=prepareRequestData("check_session",params);return $http.post(url,data).then(function(response){response.data.result&&response.data.result.exist?(setUser(checkedSid,response.data.result.acl),d.resolve(response)):(clearUser(),d.reject(response))},function(response){clearUser(),d.reject(response)}),d.promise}function logout(){var d=$q.defer(),params={sid:sid},data=prepareRequestData("logout",params);return $http.post(url,data).then(function(response){clearUser(),response.data.result&&response.data.result.deleted?d.resolve(response):d.reject(response)},function(response){clearUser(),d.reject(response)}),d.promise}function getTranslations(){function loadTranslations(){var data=prepareRequestData("get_translations",{sid:sid});return $http.post(url,data).then(function(result){result.data&&result.data.result&&result.data.result.data?translationsDefer.resolve(result.data.result.data):translationsDefer.reject()},function(result){translationsDefer.reject()})}return translationsDefer||(translationsDefer=$q.defer()),!translationsLoaded&&sid&&loadTranslations(),translationsDefer.promise}function getCount(audience){var d=$q.defer();$rootScope.$broadcast("ApiSrv.countLoading");var data=prepareRequestData("audienceCount",{sid:sid,audience:audience});return $http.post(url,data).then(function(response){response.data.result?(d.resolve(response.data.result),$rootScope.$broadcast("ApiSrv.countLoaded",response.data.result)):(d.reject(response),$rootScope.$broadcast("ApiSrv.countError",response))},function(response){d.reject(response),$rootScope.$broadcast("ApiSrv.countError",response)}),d.promise}function getImageGraph(audience,sportimage){var d=$q.defer(),data=prepareRequestData("info_sportimage",{sid:sid,audience:audience,sportimage:sportimage});return $http.post(url,data).then(function(response){response.data.result&&response.data.result.graph?d.resolve(response.data.result.graph):d.reject(response)},function(response){d.reject(response)}),d.promise}function getInterestGraph(audience,sportinterest){var d=$q.defer(),data=prepareRequestData("info_sportinterest",{sid:sid,audience:audience,sportinterest:sportinterest});return $http.post(url,data).then(function(response){response.data.result&&response.data.result.graph?d.resolve(response.data.result.graph):d.reject(response)},function(response){d.reject(response)}),d.promise}function getInvolveGraph(audience,involve){var d=$q.defer(),data=prepareRequestData("info_fan_involvment",{sid:sid,audience:audience,involve:involve});return $http.post(url,data).then(function(response){response.data.result&&response.data.result.graph?d.resolve(response.data.result.graph):d.reject(response)},function(response){d.reject(response)}),d.promise}function getExpressSport(audience,sport,clubs){var d=$q.defer(),data=prepareRequestData("info_express_sport",{sid:sid,audience:audience,sport:sport,clubs:clubs});return $http.post(url,data).then(function(response){response.data.result?d.resolve(response.data.result):d.reject(response)},function(response){d.reject(response)}),d.promise}function getExpressAudience(audience){var d=$q.defer(),data=prepareRequestData("info_express_audience",{sid:sid,audience:audience});return $http.post(url,data).then(function(response){response.data.result?d.resolve(response.data.result):d.reject(response)},function(response){d.reject(response)}),d.promise}var userRights,proxyURL=ConfigSrv.get().proxyURL||"",url=proxyURL+ConfigSrv.get().apiUrl,sidCookieName="sportsensus_sid",sid=null;checkSession(readSidCookie());var translationsDefer,translationsLoaded=!1,me={getUser:getUser,auth:auth,checkSession:checkSession,logout:logout,getTranslations:getTranslations,getCount:getCount,getImageGraph:getImageGraph,getInterestGraph:getInterestGraph,getInvolveGraph:getInvolveGraph,getExpressSport:getExpressSport,getExpressAudience:getExpressAudience};return me}angular.module("SportsensusApp").factory("ApiSrv",ApiSrv),angular.module("SportsensusApp").run(["ApiSrv",function(ApiSrv){}]),ApiSrv.$inject=["$rootScope","$http","$q","$cookies","ConfigSrv"]}(),function(){"use strict";function ConfigSrv(){var conf={},me={set:function(conf_){conf=angular.extend({},conf_)},_update:function(conf_){angular.extend(conf,conf_)},get:function(){return conf||{}}};return me}angular.module("SportsensusApp").factory("ConfigSrv",ConfigSrv)}(),function(){"use strict";function ParamsSrv($rootScope,$http,$q,ApiSrv,ConfigSrv){function setParamsWatchers(){}function prepareParams(){function getElement(id){function recFind(items){var finded;return items.some(function(item){return item.id&&item.id==id?finded=item:item.lists instanceof Array&&(finded=recFind(item.lists)),!!finded}),finded}var item=recFind(translations.pages);if(item)return item}function audienceChanged(){var audience=getSelectedAudience();ApiSrv.getCount(audience)}function audienceChanged(){var audience=getSelectedAudience();ApiSrv.getCount(audience)}["demography","consume","regions","sport","interest","rooting","involve","image"].forEach(function(type){parameters[type]=getElement(type),$rootScope.$watch(function(){return parameters[type]},function(newValue,oldValue){$rootScope.$broadcast("ParamsSrv.paramsChanged",type,newValue,oldValue),["demography","consume","regions"].indexOf(type)>=0&&ApiSrv.getCount(getSelectedAudience())},!0)});var allSports={football:1,hockey:2,basketball:3,car:4,figskating:5,biathlon:6,boxing:7,tennis:8},colorGenerator=d3.scale.category10();parameters.sport.lists.forEach(function(item){item.key=allSports[item.id],item.chartColor=colorGenerator(allSports[item.id])}),parameters.interest.lists.forEach(function(item){item.chartColor=colorGenerator(item.id)}),parameters.involve.lists.forEach(function(item){item.chartColor=colorGenerator(item.id)}),$rootScope.$watch(function(){return[parameters.demography,parameters.consume,parameters.regions]},audienceChanged,!0),[].forEach(function(param){}),$rootScope.$watch(function(){return[parameters.demography,parameters.consume,parameters.regions]},audienceChanged,!0)}function getSelectedParamsRec(item){if(!item.lists.every(function(subitem){return!subitem.lists})){var res={};return item.selected!==!1&&item.interested!==!1&&item.lists.forEach(function(subitem){var subitemList=getSelectedParamsRec(subitem);subitemList&&(res[subitem.id]=subitemList)}),item.interested&&(res.interested=!0),Object.keys(res).length?res:void 0}var selectedA=item.lists.filter(function(subitem){return subitem.selected}).map(function(subitem){return subitem.id});if(selectedA.length)return selectedA.length?selectedA:void 0}function getSelectedParams(itemName){return getSelectedParamsRec(parameters[itemName])}function getSelectedAudience(){return{demography:getSelectedParams("demography"),regions:getSelectedParams("regions"),consume:getSelectedParams("consume")}}function getParams(){return padamsDefer.promise}var padamsDefer=$q.defer(),parameters={},translations=null;ApiSrv.getTranslations().then(function(data){translations=data,prepareParams(),setParamsWatchers(),padamsDefer.resolve(parameters)},function(){padamsDefer.reject()});var me={getParams:getParams,getSelectedParams:getSelectedParams,getSelectedAudience:getSelectedAudience};return me}angular.module("SportsensusApp").factory("ParamsSrv",ParamsSrv),angular.module("SportsensusApp").run(["ParamsSrv",function(ParamsSrv){}]),ParamsSrv.$inject=["$rootScope","$http","$q","ApiSrv","ConfigSrv"]}(),function(){"use strict";function headerDir($rootScope,ApiSrv){return{restrict:"E",scope:{},templateUrl:"/views/widgets/header/header.html",link:function($scope,$el,attrs){},controller:["$scope","$routeParams","$location","$window","ApiSrv",function($scope,$routeParams,$location,$window,ApiSrv){$scope.loggedIn=!1,$scope.menu=[{name:"О проекте",visible:function(){return!$scope.loggedIn}},{name:"Зарегистрироваться",visible:function(){return!$scope.loggedIn}},{name:"Войти",visible:function(){return!$scope.loggedIn},onClick:function(){$scope.setPath("/login/")}},{name:"Техническая поддержка",visible:function(){return!$scope.loggedIn},onClick:function(){$scope.setPath("/infobox/")}},{name:"Получить информацию",visible:function(){return $scope.loggedIn}},{name:"Проанализировать",visible:function(){return $scope.loggedIn}},{name:"Спланировать",visible:function(){return $scope.loggedIn}},{name:"Оценить",visible:function(){return $scope.loggedIn}}],$scope.$watch(function(){return ApiSrv.getUser().sid},function(sid){$scope.loggedIn=!!sid},!0),$scope.setPath=function(path){$location.path(path)},$scope.logout=function(){ApiSrv.logout(),$scope.setPath("/")}}]}}angular.module("SportsensusApp").directive("headerDir",headerDir),headerDir.$inject=["$rootScope","ApiSrv"]}(),function(){"use strict";function homeDir($rootScope){return{restrict:"E",scope:{},templateUrl:"/views/widgets/home/home.html",link:function($scope,$el,attrs){},controller:["$scope","$routeParams","$location","$window",function($scope,$routeParams,$location,$window){}]}}angular.module("SportsensusApp").directive("homeDir",homeDir),homeDir.$inject=["$rootScope"]}(),function(){"use strict";function infoboxDir($rootScope){return{restrict:"E",scope:{},templateUrl:"/views/widgets/infobox/infobox.html",link:function($scope,$el,attrs){},controller:["$scope","$routeParams","$location","$window","ParamsSrv",function($scope,$routeParams,$location,$window,ParamsSrv){$scope.audienceCountText=null,$scope.audienceMenu=[{id:"demography",text:"Социальная демография"},{id:"consume",text:"Потребительское поведение"},{id:"regions",text:"География"}],$scope.sportinfoMenu=[{id:"sport",text:"Спорт"},{id:"interest/interest",text:"Степень интереса"},{id:"rooting/rooting",text:"Сила боления"},{id:"involve/involve",text:"Причастность к видам спорта"},{id:"image/image",text:"Восприятие видов спорта"}],$scope.pages={},["image/imageGraph","allGraphs","expressSport/expressSport","expressAudience/expressAudience"].forEach(function(page){$scope.pages[page]={id:page}}),ParamsSrv.getParams().then(function(params){$scope.parameters=params}),$scope.activePage=null,$scope.activeMenuItem=null,$scope.setActiveMenuItem=function(item){$scope.activeMenuItem=item,$scope.activePage=item},$scope.getAllSubchildren=function(item){if(item){var finalItems=[];return!item.lists||item.lists.every(function(subitem){return!subitem.lists})?finalItems.push(item):item.lists.forEach(function(subitem){finalItems=finalItems.concat($scope.getAllSubchildren(subitem))}),finalItems}},$scope.$on("ApiSrv.countError",function(){$scope.audienceCountText="Болельщики: ошибка загрузки"}),$scope.$on("ApiSrv.countLoaded",function(event,result){result.is_valid_count?$scope.audienceCountText="Болельщики: "+result.audience_count.toLocaleString():$scope.audienceCountText="Болельщики: недостаточно данных"}),$scope.$on("ParamsSrv.paramsChanged",function(event,type,newValue,oldValue){var demography=ParamsSrv.getSelectedParams("demography"),consume=ParamsSrv.getSelectedParams("consume"),regions=ParamsSrv.getSelectedParams("regions"),audienceSelected=!!(demography||regions||consume),sport=ParamsSrv.getSelectedParams("sport"),interest=ParamsSrv.getSelectedParams("interest"),rooting=ParamsSrv.getSelectedParams("rooting"),involve=ParamsSrv.getSelectedParams("involve"),image=ParamsSrv.getSelectedParams("image"),sportSelected=!!sport,filtersSelected=!!(interest||rooting||involve||image);!audienceSelected||sportSelected||filtersSelected?!sportSelected||audienceSelected||filtersSelected?($scope.checkButtonText="Показать результат",$scope.checkButtonPage="allGraphs"):($scope.checkButtonText="Экспресс результат",$scope.checkButtonPage="expressSport/expressSport"):($scope.checkButtonText="Экспресс результат",$scope.checkButtonPage="expressAudience/expressAudience")}),$scope.checkButtonText="",$scope.checkButtonPage=null,$scope.checkButtonClick=function(){$scope.activePage=$scope.pages[$scope.checkButtonPage]},$scope.selectCheckbox=function(collection,item){ParamsSrv.getParams().then(function(params){}),"radio"==collection.type&&angular.forEach(collection.items,function(_item){item!=_item&&(_item.selected=!1)})}}]}}angular.module("SportsensusApp").directive("infoboxDir",infoboxDir),infoboxDir.$inject=["$rootScope"]}(),function(){"use strict";function saveAsPdfDir($rootScope,$q){function svg2canvas2(svg){return $q(function(resolve,reject){var canvas=document.createElement("canvas"),xml=(new XMLSerializer).serializeToString(svg);xml=xml.replace(/xmlns=\"http:\/\/www\.w3\.org\/2000\/svg\"/,""),canvg(canvas,xml);var svgE=angular.element(svg),canvasE=angular.element(canvas);svgE.replaceWith(canvasE),resolve({svg:svgE,canvas:canvasE})})}function saveAsPdf(element){function render(elements){html2canvas(element[0],{useCORS:!0,allowTaint:!0}).then(function(canvas){elements.forEach(function(element){element.canvas.replaceWith(element.svg)});var imgData=canvas.toDataURL("image/png"),doc=new jsPDF("p","pt","a4",(!0)),scale=Math.min(575.28/canvas.width,821.89/canvas.height);doc.addImage(imgData,"PNG",10,10,canvas.width*scale,canvas.height*scale),doc.save("sample-file.pdf")})}var elements=element.find("svg"),promises=Array.prototype.map.call(elements,function(item){return svg2canvas2(item)});$q.all(promises).then(function(elements){render(elements)},function(err){})}return{restrict:"A",link:function($scope,$el,attrs){$scope.saveAsPdf=function(){return saveAsPdf($el)}}}}angular.module("SportsensusApp").directive("saveAsPdfDir",saveAsPdfDir),saveAsPdfDir.$inject=["$rootScope","$q"]}(),function(){"use strict";function loginDir($rootScope){return{restrict:"E",scope:{},templateUrl:"/views/widgets/login/login.html",link:function($scope,$el,attrs){},controller:["$scope","$routeParams","$location","$window","ApiSrv",function($scope,$routeParams,$location,$window,ApiSrv){$scope.vm={login:null,password:null,error:null},$scope.login=function(){$scope.vm.dataLoading=!0,$scope.vm.error=null,ApiSrv.auth($scope.vm).then(function(){$location.path("/infobox/"),$scope.vm.dataLoading=!1},function(){$scope.vm.dataLoading=!1,$scope.vm.error="Неправильный логин или пароль"})}}]}}angular.module("SportsensusApp").directive("loginDir",loginDir),loginDir.$inject=["$rootScope"]}(),function(){"use strict";function downloadDir($rootScope){return{restrict:"E",replace:!0,scope:!0,templateUrl:"/views/widgets/buttons/downloadPDF/downloadPDF.html",link:function($scope,$el,attrs){},controller:["$scope",function($scope){$scope.save=function(){$scope.saveAsPdf&&$scope.saveAsPdf()},$scope.print=function(){},$scope.send=function(){}}]}}angular.module("SportsensusApp").directive("downloadDir",downloadDir),downloadDir.$inject=["$rootScope"]}(),function(){"use strict";function legendDir($rootScope){return{restrict:"E",scope:{legend:"=",columnsCount:"@"},templateUrl:"/views/widgets/charts/legend/legend.html",link:function($scope,$el,attrs){},controller:["$scope","$routeParams","$location","$window","ApiSrv",function($scope){$scope.legends=[],$scope.$watch("legend",function(){if($scope.legend&&$scope.legend.length){$scope.columnsCount=Number.parseInt($scope.columnsCount)||1;for(var count=$scope.legend.length,col=1;col<=$scope.columnsCount;col++)$scope.legends.push($scope.legend.slice(Math.ceil(count/$scope.columnsCount*(col-1)),Math.ceil(count/$scope.columnsCount*col)))}}),$scope.itemClick=function(item){item.selected=!item.selected}}]}}angular.module("SportsensusApp").directive("legendDir",legendDir),legendDir.$inject=["$rootScope"]}(),function(){"use strict";function radarDir($rootScope){return{restrict:"E",scope:{chart:"="},templateUrl:"/views/widgets/charts/radar/radar.html",link:function($scope,$el,attrs){$scope.el=$el,$scope.$watch("chart",$scope.redrawChart)},controller:["$scope",function($scope){$scope.redrawChart=function(){if(!$scope.chart||!$scope.chart.data||!$scope.chart.options)return void $scope.el.empty();var margin={top:50,right:120,bottom:100,left:120},width=700-margin.left-margin.right,height=700-margin.top-margin.bottom,options={w:width,h:height,margin:margin};options=angular.extend({},$scope.chart.options,options),RadarChart($scope.el[0],$scope.chart.data,options)}}]}}angular.module("SportsensusApp").directive("radarDir",radarDir),radarDir.$inject=["$rootScope"]}(),function(factory){"use strict";"function"==typeof define&&define.amd?define(["chart.js"],factory):"object"==typeof exports?module.exports=factory(require("chart.js")):factory(Chart)}(function(Chart){"use strict";var helpers=Chart.helpers,defaultConfig={scaleBeginAtZero:!0,scaleShowGridLines:!0,scaleGridLineColor:"rgba(0,0,0,.05)",scaleGridLineWidth:1,scaleShowHorizontalLines:!0,scaleShowVerticalLines:!0,barShowStroke:!0,barStrokeWidth:2,barValueSpacing:5,relativeBars:!1,legendTemplate:'<ul class="<%=name.toLowerCase()%>-legend"><% for (var i=0; i<datasets.length; i++){%><li><span style="background-color:<%=datasets[i].fillColor%>"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',showTotal:!1,totalColor:"#fff",totalLabel:"Total",tooltipHideZero:!1};Chart.Type.extend({name:"StackedBar",defaults:defaultConfig,initialize:function(data){var options=this.options;this.data=data,this.ScaleClass=Chart.Scale.extend({offsetGridLines:!0,calculateBarX:function(barIndex){return this.calculateX(barIndex)},calculateBarY:function(datasets,dsIndex,barIndex,value){for(var offset=0,sum=0,i=0;i<datasets.length;i++)sum+=datasets[i].bars[barIndex].value;for(i=dsIndex;i<datasets.length;i++)i===dsIndex&&value?offset+=value:offset=+offset+ +datasets[i].bars[barIndex].value;return options.relativeBars&&(offset=offset/sum*100),this.calculateY(offset)},calculateBaseWidth:function(){return options.barWidth?options.barWidth:this.calculateX(1)-this.calculateX(0)-2*options.barValueSpacing},calculateBaseHeight:function(){return this.calculateY(1)-this.calculateY(0)},calculateBarWidth:function(datasetCount){return this.calculateBaseWidth()},calculateBarHeight:function(datasets,dsIndex,barIndex,value){for(var sum=0,i=0;i<datasets.length;i++)sum+=datasets[i].bars[barIndex].value;return value||(value=datasets[dsIndex].bars[barIndex].value),options.relativeBars&&(value=value/sum*100),this.calculateY(value)}}),this.datasets=[],this.options.showTooltips&&helpers.bindEvents(this,this.options.tooltipEvents,function(evt){var activeBars="mouseout"!==evt.type?this.getBarsAtEvent(evt):[];this.eachBars(function(bar){bar.restore(["fillColor","strokeColor"])}),helpers.each(activeBars,function(activeBar){activeBar.fillColor=activeBar.highlightFill,activeBar.strokeColor=activeBar.highlightStroke}),this.showTooltip(activeBars)}),this.BarClass=Chart.Rectangle.extend({strokeWidth:this.options.barStrokeWidth,showStroke:this.options.barShowStroke,ctx:this.chart.ctx}),helpers.each(data.datasets,function(dataset,datasetIndex){var datasetObject={label:dataset.label||null,fillColor:dataset.fillColor,strokeColor:dataset.strokeColor,bars:[]};this.datasets.push(datasetObject),helpers.each(dataset.data,function(dataPoint,index){helpers.isNumber(dataPoint)||(dataPoint=0),datasetObject.bars.push(new this.BarClass({value:dataPoint,label:data.labels[index],datasetLabel:dataset.label instanceof Array?dataset.label[datasetObject.bars.length]:dataset.label,strokeColor:dataset.strokeColor,fillColor:dataset.fillColor instanceof Array?dataset.fillColor[datasetObject.bars.length]:dataset.fillColor,highlightFill:dataset.highlightFill||dataset.fillColor instanceof Array?dataset.fillColor[datasetObject.bars.length]:dataset.fillColor,highlightStroke:dataset.highlightStroke||dataset.strokeColor}))},this)},this),this.buildScale(data.labels);var paddings=this.scale.xScalePaddingLeft+this.scale.xScalePaddingRight,datas=data.labels.length*this.options.barWidth+data.labels.length*this.options.barValueSpacing,width=paddings+datas;this.chart.width=width,this.chart.canvas.width=width;var height=this.options.barHeight-(this.scale.endPoint-this.scale.startPoint)+this.chart.height;this.chart.height=height,this.chart.canvas.height=height,helpers.retinaScale(this.chart),this.buildScale(data.labels),this.eachBars(function(bar,index,datasetIndex){helpers.extend(bar,{base:this.scale.endPoint,height:0,width:this.scale.calculateBarWidth(this.datasets.length),x:this.scale.calculateBarX(index),y:this.scale.endPoint}),bar.save()},this),this.render()},showTooltip:function(ChartElements,forceRedraw){"undefined"==typeof this.activeElements&&(this.activeElements=[]),helpers=Chart.helpers;var isChanged=function(Elements){var changed=!1;return Elements.length!==this.activeElements.length?changed=!0:(helpers.each(Elements,function(element,index){element!==this.activeElements[index]&&(changed=!0)},this),changed)}.call(this,ChartElements);if(isChanged||forceRedraw){if(this.activeElements=ChartElements,this.draw(),this.options.customTooltips&&this.options.customTooltips(!1),ChartElements.length>0)if(this.datasets&&this.datasets.length>1){for(var dataArray,dataIndex,i=this.datasets.length-1;i>=0&&(dataArray=this.datasets[i].points||this.datasets[i].bars||this.datasets[i].segments,dataIndex=helpers.indexOf(dataArray,ChartElements[0]),dataIndex===-1);i--);var tooltipLabels=[],tooltipColors=[],medianPosition=function(index){var dataCollection,xMax,yMax,xMin,yMin,Elements=[],xPositions=[],yPositions=[];helpers.each(this.datasets,function(dataset){dataCollection=dataset.points||dataset.bars||dataset.segments,dataCollection[dataIndex]&&dataCollection[dataIndex].hasValue()&&Elements.push(dataCollection[dataIndex])});var total={datasetLabel:this.options.totalLabel,value:0,fillColor:this.options.totalColor,strokeColor:this.options.totalColor};return helpers.each(Elements,function(element){this.options.tooltipHideZero&&0===element.value||(xPositions.push(element.x),yPositions.push(element.y),total.value+=element.value,tooltipLabels.push(helpers.template(this.options.multiTooltipTemplate,element)),tooltipColors.push({fill:element._saved.fillColor||element.fillColor,stroke:element._saved.strokeColor||element.strokeColor}))},this),this.options.showTotal&&(tooltipLabels.push(helpers.template(this.options.multiTooltipTemplate,total)),tooltipColors.push({fill:total.fillColor,stroke:total.strokeColor})),yMin=helpers.min(yPositions),yMax=helpers.max(yPositions),xMin=helpers.min(xPositions),xMax=helpers.max(xPositions),{x:xMin>this.chart.width/2?xMin:xMax,y:(yMin+yMax)/2}}.call(this,dataIndex);new Chart.MultiTooltip({x:medianPosition.x,y:medianPosition.y,xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,xOffset:this.options.tooltipXOffset,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,titleTextColor:this.options.tooltipTitleFontColor,titleFontFamily:this.options.tooltipTitleFontFamily,titleFontStyle:this.options.tooltipTitleFontStyle,titleFontSize:this.options.tooltipTitleFontSize,cornerRadius:this.options.tooltipCornerRadius,labels:tooltipLabels,legendColors:tooltipColors,legendColorBackground:this.options.multiTooltipKeyBackground,title:ChartElements[0].label,chart:this.chart,ctx:this.chart.ctx,custom:this.options.customTooltips}).draw()}else helpers.each(ChartElements,function(Element){var tooltipPosition=Element.tooltipPosition();new Chart.Tooltip({x:Math.round(tooltipPosition.x),y:Math.round(tooltipPosition.y),xPadding:this.options.tooltipXPadding,yPadding:this.options.tooltipYPadding,fillColor:this.options.tooltipFillColor,textColor:this.options.tooltipFontColor,fontFamily:this.options.tooltipFontFamily,fontStyle:this.options.tooltipFontStyle,fontSize:this.options.tooltipFontSize,caretHeight:this.options.tooltipCaretSize,cornerRadius:this.options.tooltipCornerRadius,text:helpers.template(this.options.tooltipTemplate,Element),chart:this.chart,custom:this.options.customTooltips}).draw()},this);return this}},update:function(){helpers.each(this.datasets,function(dataset,datasetIndex){helpers.extend(this.datasets[datasetIndex],{label:dataset.label||null,fillColor:dataset.fillColor,strokeColor:dataset.strokeColor}),helpers.each(dataset.data,function(dataPoint,index){helpers.extend(this.datasets[datasetIndex].bars[index],{value:dataPoint,label:this.data.labels[index],datasetLabel:dataset.label,strokeColor:dataset.strokeColor,fillColor:dataset.fillColor,highlightFill:dataset.highlightFill||dataset.fillColor,highlightStroke:dataset.highlightStroke||dataset.strokeColor})},this)},this),this.scale.update(),helpers.each(this.activeElements,function(activeElement){activeElement.restore(["fillColor","strokeColor"])}),this.eachBars(function(bar){bar.save()}),this.render()},eachBars:function(callback){helpers.each(this.datasets,function(dataset,datasetIndex){helpers.each(dataset.bars,callback,this,datasetIndex)},this)},getBarsAtEvent:function(e){for(var barIndex,barsArray=[],eventPosition=helpers.getRelativePosition(e),datasetIterator=function(dataset){barsArray.push(dataset.bars[barIndex])},datasetIndex=0;datasetIndex<this.datasets.length;datasetIndex++)for(barIndex=0;barIndex<this.datasets[datasetIndex].bars.length;barIndex++)if(this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y))return helpers.each(this.datasets,datasetIterator),
barsArray;return barsArray},buildScale:function(labels){var self=this,dataTotal=function(){var values=[];return helpers.each(self.datasets,function(dataset){helpers.each(dataset.bars,function(bar,barIndex){values[barIndex]||(values[barIndex]=0),self.options.relativeBars?values[barIndex]=100:values[barIndex]=+values[barIndex]+ +bar.value})}),values},scaleOptions={templateString:this.options.scaleLabel,height:this.chart.height,width:this.chart.width,ctx:this.chart.ctx,textColor:this.options.scaleFontColor,fontSize:this.options.scaleFontSize,fontStyle:this.options.scaleFontStyle,fontFamily:this.options.scaleFontFamily,valuesCount:labels.length,beginAtZero:this.options.scaleBeginAtZero,integersOnly:this.options.scaleIntegersOnly,calculateYRange:function(currentHeight){var updatedRanges=helpers.calculateScaleRange(dataTotal(),currentHeight,this.fontSize,this.beginAtZero,this.integersOnly);helpers.extend(this,updatedRanges)},xLabels:this.options.xLabels||labels,font:helpers.fontString(this.options.scaleFontSize,this.options.scaleFontStyle,this.options.scaleFontFamily),lineWidth:this.options.scaleLineWidth,lineColor:this.options.scaleLineColor,gridLineWidth:this.options.scaleShowGridLines?this.options.scaleGridLineWidth:0,gridLineColor:this.options.scaleShowGridLines?this.options.scaleGridLineColor:"rgba(0,0,0,0)",showHorizontalLines:this.options.scaleShowHorizontalLines,showVerticalLines:this.options.scaleShowVerticalLines,padding:(this.options.showScale?0:this.options.barShowStroke?this.options.barStrokeWidth:0)+(this.options.padding?this.options.padding:0),showLabels:this.options.scaleShowLabels,display:this.options.showScale};this.options.scaleOverride&&helpers.extend(scaleOptions,{calculateYRange:helpers.noop,steps:this.options.scaleSteps,stepValue:this.options.scaleStepWidth,min:this.options.scaleStartValue,max:this.options.scaleStartValue+this.options.scaleSteps*this.options.scaleStepWidth}),this.scale=new this.ScaleClass(scaleOptions)},addData:function(valuesArray,label){helpers.each(valuesArray,function(value,datasetIndex){helpers.isNumber(value)&&this.datasets[datasetIndex].bars.push(new this.BarClass({value:helpers.isNumber(value)?value:0,label:label,x:this.scale.calculateBarX(this.scale.valuesCount+1),y:this.scale.endPoint,width:this.scale.calculateBarWidth(this.datasets.length),base:this.scale.endPoint,strokeColor:this.datasets[datasetIndex].strokeColor,fillColor:this.datasets[datasetIndex].fillColor}))},this),this.scale.addXLabel(label),this.update()},removeData:function(){this.scale.removeXLabel(),helpers.each(this.datasets,function(dataset){dataset.bars.shift()},this),this.update()},reflow:function(){helpers.extend(this.BarClass.prototype,{y:this.scale.endPoint,base:this.scale.endPoint});var newScaleProps=helpers.extend({height:this.chart.height,width:this.chart.width});this.scale.update(newScaleProps)},draw:function(ease){var easingDecimal=ease||1;this.clear();var ctx=this.chart.ctx;this.scale.draw(easingDecimal),helpers.each(this.datasets,function(dataset,datasetIndex){helpers.each(dataset.bars,function(bar,index){var y=this.scale.calculateBarY(this.datasets,datasetIndex,index,bar.value),height=this.scale.calculateBarHeight(this.datasets,datasetIndex,index,bar.value);bar.value>0&&(bar.transition({base:this.scale.endPoint-(Math.abs(height)-Math.abs(y)),x:this.scale.calculateBarX(index),y:Math.abs(y),height:Math.abs(height),width:this.scale.calculateBarWidth(this.datasets.length)},easingDecimal).draw(),ctx.font=this.scale.font,ctx.fillStyle=this.scale.textColor,ctx.textAlign="center",ctx.textBaseline="bottom",this.options.showLabels!==!1&&(this.options.showLabels instanceof Function?ctx.fillText(this.options.showLabels(bar.value),bar.x,bar.y-3):ctx.fillText(bar.value,bar.x,bar.y-3)))},this)},this)}})}),function(){"use strict";function stackedBarDir($rootScope){return{restrict:"E",scope:{chart:"="},templateUrl:"/views/widgets/charts/stackedBar/stackedBar.html",link:function($scope,$el,attrs){$scope.el=$el,$scope.$watch("chart",$scope.redrawChart)},replace:!0,controller:["$scope",function($scope){$scope.redrawChart=function(){if($scope.chartObj&&($scope.chartObj.clear(),$scope.chartObj.destroy()),$scope.chart&&$scope.chart.data&&$scope.chart.options){var chartData=$scope.chart.data,chartOptions=$scope.chart.options||{},ctx=$scope.el.find("canvas")[0].getContext("2d");$scope.chartObj=new Chart(ctx).StackedBar(chartData,angular.extend({showLabels:!1,showTooltips:!0,stacked:!0,barWidth:30,barHeight:100,padding:20,barValueSpacing:20,scaleLabel:function(obj){return obj.value>1e6?obj.value/1e3/1e3+"M":obj.value>1e3?obj.value/1e3+"K":obj.value},tooltipHideZero:!0,maintainAspectRatio:!1},chartOptions))}}}]}}angular.module("SportsensusApp").directive("stackedBarDir",stackedBarDir),stackedBarDir.$inject=["$rootScope"]}(),function(){"use strict";function baseGraphCtrl($scope,$rootScope){$scope.getSportLegend=function(options){options=options||{};var selected=!1,legend=$scope.parameters.sport.lists.map(function(list){selected=selected||list.interested;var result={id:list.id,name:list.name,key:list.key,color:options.color?options.color:list.chartColor,selected:list.interested};if(options.clubs){var clubsObj=list.lists.filter(function(child){return"clubs"==child.id});if(clubsObj.length){var clubs=clubsObj[0].lists.map(function(list){return{id:list.id,name:list.name,color:options.color?options.color:list.chartColor,selected:list.selected}});result.clubs=clubs}}return result});return selected||options.selectAll===!1||legend.forEach(function(item){item.selected=!0}),legend},$scope.getInterestLegend=function(options){options=options||{};var selected=!1,legend=$scope.parameters.interest.lists.map(function(list){return selected=selected||list.selected,{id:list.id,name:list.name,color:options.color?options.color:list.chartColor,selected:list.selected}}).reverse();return selected||legend.forEach(function(item){item.selected=!0}),legend},$scope.getImageLegend=function(options){options=options||{};var selected=!1,legend=$scope.parameters.image.lists.map(function(list){return selected=selected||list.selected,{id:list.id,name:list.name,color:options.color?options.color:list.chartColor,selected:list.selected}}).reverse();return selected||legend.forEach(function(item){item.selected=!0}),legend},$scope.getInvolveLegend=function(options){options=options||{};var selected=!1,legend=$scope.parameters.involve.lists.map(function(list){return selected=selected||list.selected,{id:list.id,name:list.name,color:options.color?options.color:list.chartColor,selected:list.selected}});return selected||legend.forEach(function(item){item.selected=!0}),legend},$scope.formatValue=function(value){var multiplier=value>1e6?1e6:value>1e3?1e3:1;return value/=multiplier,value=value>=100?Math.round(value):value>10?Math.round(10*value)/10:Math.round(100*value)/100,value+(1e6==multiplier?"M":1e3==multiplier?"K":"")}}angular.module("SportsensusApp").controller("baseGraphCtrl",baseGraphCtrl),baseGraphCtrl.$inject=["$scope","$rootScope"]}(),function(){"use strict";function expressAudienceCtrl($scope,$controller,ParamsSrv,ApiSrv){$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends()}),$scope.sportDatas={}}angular.module("SportsensusApp").controller("expressAudienceCtrl",expressAudienceCtrl),expressAudienceCtrl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}(),function(){"use strict";function expressSportCtrl($scope,$controller,ParamsSrv,ApiSrv){function requestData(sport){var audience=ParamsSrv.getSelectedAudience(),clubs=sport.clubs?sport.clubs.filter(function(club){return club.selected}).map(function(club){return club.id}):[];ApiSrv.getExpressSport(audience,sport.key,clubs).then(function(data){$scope.sportDatas[sport.key]=data},function(){})}$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends()}),$scope.sportDatas={},$scope.prepareLegends=function(){$scope.sportLegend=$scope.getSportLegend({color:"#555555",clubs:!0,selectAll:!1}),$scope.sportLegend.forEach(function(sport){$scope.$watch(function(){return sport},function(sport,oldValue){sport.selected?requestData(sport):$scope.sportDatas[sport.key]=null},!0)})},$scope.checkSport=function(item){item.selected=!item.selected}}angular.module("SportsensusApp").controller("expressSportCtrl",expressSportCtrl),expressSportCtrl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}(),function(){"use strict";function imageGraphCrtl($scope,$controller,ParamsSrv,ApiSrv){function requestGraph(){var audience=ParamsSrv.getSelectedAudience(),sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.id]={interested:!0}});var images=$scope.parameters.image.lists.map(function(list){return list.id}),sportimage={sport:sports,image:images};ApiSrv.getImageGraph(audience,sportimage).then(function(graphData){$scope.prepareData(graphData),$scope.updateGraph()},function(){})}$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends(),requestGraph()}),$scope.prepareLegends=function(){$scope.sportLegend=$scope.getSportLegend(),$scope.imageLegend=$scope.getImageLegend(),$scope.$watch("sportLegend",$scope.updateGraph,!0)},$scope.prepareData=function(data){var images={};$scope.parameters.image.lists.forEach(function(list){images[list.id]={id:list.id,name:list.name,count:0}});var sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.key]=angular.merge({data:angular.merge({},images)},list)});var legendIndexes={};data.legends.forEach(function(item,index){legendIndexes[item.name]=index});var maxValue=0;data.data.forEach(function(item){var sportId=item.legend[legendIndexes.sport],imageId=item.legend[legendIndexes.image];sports[sportId].data[imageId].count+=item.count,maxValue=Math.max(maxValue,sports[sportId].data[imageId].count)},this);var multiplier=maxValue>1e6?1e6:maxValue>1e3?1e3:1;$scope.chartsData={multiplier:multiplier,maxValue:maxValue,sports:sports}},$scope.updateGraph=function(){if($scope.chartsData){var sports=$scope.sportLegend.filter(function(item){return item.selected}),images=$scope.imageLegend,chartData=[],localColors=[],maxValue=0;sports.forEach(function(sport){var axisData=[];$scope.chartsData.sports[sport.key].data;images.forEach(function(image){var value=$scope.chartsData.sports[sport.key].data[image.id].count;axisData.push({axis:image.name,value:value}),maxValue=Math.max(maxValue,value)},this),chartData.push(axisData),localColors.push(sport.color)});for(var multiplier=1;maxValue>100;)multiplier*=10,maxValue/=10;maxValue=5*Math.ceil(maxValue/5)*multiplier;var radarChartOptions={maxValue:maxValue,levels:5,wrapWidth:100,labelFactor:1.32,roundStrokes:!0,format:$scope.formatValue,color:function(i){return localColors[i]}};chartData&&chartData.length?$scope.chart={data:chartData,options:radarChartOptions}:$scope.chart=null}}}angular.module("SportsensusApp").controller("imageGraphCrtl",imageGraphCrtl),imageGraphCrtl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}(),function(){"use strict";function interestGraphCrtl($scope,$controller,ParamsSrv,ApiSrv){function requestGraph(){var audience=ParamsSrv.getSelectedAudience(),sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.id]={interested:!0}});var interests=$scope.parameters.interest.lists.map(function(list){return list.id}),sportinterest={sport:sports,interest:interests};ApiSrv.getInterestGraph(audience,sportinterest).then(function(graphData){$scope.prepareData(graphData),$scope.updateGraph()},function(){})}$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends(),requestGraph()}),$scope.showCharts=!1,$scope.prepareLegends=function(){$scope.sportLegend=$scope.getSportLegend({color:"#555555"}),$scope.interestLegend=$scope.getInterestLegend(),$scope.$watch("sportLegend",$scope.updateGraph,!0),$scope.$watch("interestLegend",$scope.updateGraph,!0)},$scope.prepareData=function(data){var interests={};$scope.parameters.interest.lists.forEach(function(list){interests[list.id]={id:list.id,name:list.name,count:0}});var sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.key]=angular.merge({data:angular.merge({},interests)},list)});var legendIndexes={};data.legends.forEach(function(item,index){legendIndexes[item.name]=index});var maxValue=0;data.data.forEach(function(item){var sportId=item.legend[legendIndexes.sport],interestId=item.legend[legendIndexes.sportinterest];sports[sportId].data[interestId].count+=item.count,maxValue=Math.max(maxValue,sports[sportId].data[interestId].count)},this);var multiplier=maxValue>1e6?1e6:maxValue>1e3?1e3:1;$scope.chartsData={multiplier:multiplier,maxValue:maxValue,sports:sports}},$scope.updateGraph=function(){if($scope.chartsData){var sports=$scope.sportLegend.filter(function(item){return item.selected}),interests=$scope.interestLegend.filter(function(item){return item.selected}),useStack=interests.every(function(item){return 3!=item.id}),charts=[];sports.forEach(function(sport){var chartData={labels:[],datasets:[]};if(useStack){var interestA=[],notInterestA=[];interests.forEach(function(interest){0!=$scope.chartsData.sports[sport.key].data[interest.id].count&&(interest.id<3&&interestA.push(interest),interest.id>3&&notInterestA.push(interest))});var twoCols=interestA.length&&notInterestA.length,firstDs={label:[],fillColor:[],data:[]},secondDs={label:[],fillColor:[],data:[]};[[notInterestA[0],firstDs],[interestA[0],firstDs],[notInterestA[1],secondDs],[interestA[1],secondDs]].forEach(function(item){item[0]?(item[1].label.push(item[0].name),item[1].fillColor.push(item[0].color),item[1].data.push($scope.chartsData.sports[sport.key].data[item[0].id].count)):twoCols&&(item[1].label.push(""),item[1].fillColor.push(""),item[1].data.push(0))}),chartData.labels.push(""),twoCols&&chartData.labels.push(""),firstDs.label.length&&chartData.datasets.push(firstDs),secondDs.label.length&&chartData.datasets.push(secondDs)}else{var dataDs={label:[],fillColor:[],data:[]},emptyDs={label:[],fillColor:[],data:[]};interests.forEach(function(interest){var value=$scope.chartsData.sports[sport.key].data[interest.id].count;0!=value&&(dataDs.label.push(interest.name),dataDs.fillColor.push(interest.color),dataDs.data.push($scope.chartsData.sports[sport.key].data[interest.id].count),emptyDs.label.push(interest.name),emptyDs.fillColor.push(interest.color),emptyDs.data.push(0),chartData.labels.push(""))}),chartData.datasets.push(dataDs),chartData.datasets.push(emptyDs)}charts.push({sport:sport,chartData:{data:chartData,options:{showLabels:!(useStack&&chartData.datasets.length>1)&&$scope.formatValue,scaleLabel:function(obj){return $scope.formatValue(obj.value)}}}})}),$scope.showCharts=!!charts.length&&!!interests.length,$scope.charts=charts;var combineChart={data:{labels:[],datasets:[]},options:{scaleLabel:function(obj){return $scope.formatValue(obj.value)},barWidth:40,barHeight:300,barValueSpacing:30}};combineChart.data.labels=sports.map(function(item){return item.name.replace(" ","\n")}),interests.forEach(function(interest){var ds={label:[],fillColor:[],data:[]};sports.forEach(function(sport){ds.label.push(interest.name),ds.fillColor.push(interest.color),ds.data.push($scope.chartsData.sports[sport.key].data[interest.id].count)}),combineChart.data.datasets.push(ds)}),$scope.combineChart=combineChart.data.labels.length>1?combineChart:null}}}angular.module("SportsensusApp").controller("interestGraphCrtl",interestGraphCrtl),interestGraphCrtl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}(),function(){"use strict";function involveGraphCrtl($scope,$controller,ParamsSrv,ApiSrv){function requestGraph(){var audience=ParamsSrv.getSelectedAudience(),sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.id]={interested:!0}});var involve=$scope.parameters.involve.lists.map(function(list){return list.id}),sportInvolve={sport:sports,involve:involve};ApiSrv.getInvolveGraph(audience,sportInvolve).then(function(graphData){$scope.prepareData(graphData),$scope.updateGraph()},function(){})}$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends(),requestGraph()}),$scope.showCharts=!1,$scope.prepareLegends=function(){$scope.sportLegend=$scope.getSportLegend({color:"#555555"}),$scope.involveLegend=$scope.getInvolveLegend(),$scope.$watch("sportLegend",$scope.updateGraph,!0),$scope.$watch("involveLegend",$scope.updateGraph,!0)},$scope.prepareData=function(data){var involves={};$scope.parameters.involve.lists.forEach(function(list){involves[list.id]={id:list.id,name:list.name,count:0}});var sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.key]=angular.merge({data:angular.merge({},involves)},list)});var legendIndexes={};data.legends.forEach(function(item,index){legendIndexes[item.name]=index});var maxValue=0;data.data.forEach(function(item){var sportId=item.legend[legendIndexes.sport],involveId=item.legend[legendIndexes.involve];sports[sportId].data[involveId].count+=item.count,maxValue=Math.max(maxValue,sports[sportId].data[involveId].count)},this);var multiplier=maxValue>1e6?1e6:maxValue>1e3?1e3:1;$scope.chartsData={multiplier:multiplier,maxValue:maxValue,sports:sports}},$scope.updateGraph=function(){if($scope.chartsData){var sports=$scope.sportLegend.filter(function(item){return item.selected}),involves=$scope.involveLegend.filter(function(item){return item.selected}),charts=[];sports.forEach(function(sport){var chartData={labels:[],datasets:[]},dataDs={label:[],fillColor:[],data:[]},emptyDs={label:[],fillColor:[],data:[]};involves.forEach(function(involve){var value=$scope.chartsData.sports[sport.key].data[involve.id].count;0!=value&&(dataDs.label.push(involve.name),dataDs.fillColor.push(involve.color),dataDs.data.push($scope.chartsData.sports[sport.key].data[involve.id].count),emptyDs.label.push(involve.name),emptyDs.fillColor.push(involve.color),emptyDs.data.push(0),chartData.labels.push(""))}),chartData.datasets.push(dataDs),chartData.datasets.push(emptyDs),charts.push({sport:sport,chartData:{data:chartData,options:{showLabels:$scope.formatValue,scaleLabel:function(obj){return $scope.formatValue(obj.value)}}}})}),$scope.showCharts=!!charts.length&&!!involves.length,$scope.charts=charts;var combineChart={data:{labels:[],datasets:[]},options:{scaleLabel:function(obj){return $scope.formatValue(obj.value)},barWidth:40,barHeight:300,barValueSpacing:30}};combineChart.data.labels=sports.map(function(item){return item.name}),involves.forEach(function(involve){var ds={label:[],fillColor:[],data:[]};sports.forEach(function(sport){ds.label.push(involve.name),ds.fillColor.push(involve.color),ds.data.push($scope.chartsData.sports[sport.key].data[involve.id].count)}),combineChart.data.datasets.push(ds)}),$scope.combineChart=combineChart.data.labels.length>1?combineChart:null}}}angular.module("SportsensusApp").controller("involveGraphCrtl",involveGraphCrtl),involveGraphCrtl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}(),function(){"use strict";function rootingGraphCrtl($scope,$controller,ParamsSrv,ApiSrv){function requestGraph(){var audience=ParamsSrv.getSelectedAudience(),sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.id]={interested:!0}});var involve=$scope.parameters.involve.lists.map(function(list){return list.id}),sportInvolve={sport:sports,involve:involve};ApiSrv.getInvolveGraph(audience,sportInvolve).then(function(graphData){$scope.prepareData(graphData),$scope.updateGraph()},function(){})}$controller("baseGraphCtrl",{$scope:$scope}),ParamsSrv.getParams().then(function(params){$scope.parameters=params,$scope.prepareLegends(),requestGraph()}),$scope.showCharts=!1,$scope.prepareLegends=function(){$scope.sportLegend=$scope.getSportLegend({color:"#555555",clubs:!0,selectAll:!1}).filter(function(sport){return!!sport.clubs}),$scope.involveLegend=$scope.getInvolveLegend(),$scope.$watch("sportLegend",$scope.updateGraph,!0),$scope.$watch("involveLegend",$scope.updateGraph,!0)},$scope.checkSport=function(item){item.selected=!item.selected},$scope.prepareData=function(data){var involves={};$scope.parameters.involve.lists.forEach(function(list){involves[list.id]={id:list.id,name:list.name,count:0}});var sports={};$scope.parameters.sport.lists.forEach(function(list){sports[list.key]=angular.merge({data:angular.merge({},involves)},list)});var legendIndexes={};data.legends.forEach(function(item,index){legendIndexes[item.name]=index});var maxValue=0;data.data.forEach(function(item){var sportId=item.legend[legendIndexes.sport],involveId=item.legend[legendIndexes.involve];sports[sportId].data[involveId].count+=item.count,maxValue=Math.max(maxValue,sports[sportId].data[involveId].count)},this);var multiplier=maxValue>1e6?1e6:maxValue>1e3?1e3:1;$scope.chartsData={multiplier:multiplier,maxValue:maxValue,sports:sports}},$scope.updateGraph=function(){if($scope.chartsData){var sports=$scope.sportLegend.filter(function(item){return item.selected}),involves=$scope.involveLegend.filter(function(item){return item.selected}),charts=[];sports.forEach(function(sport){var chartData={labels:[],datasets:[]},dataDs={label:[],fillColor:[],data:[]},emptyDs={label:[],fillColor:[],data:[]};involves.forEach(function(involve){var value=$scope.chartsData.sports[sport.key].data[involve.id].count;0!=value&&(dataDs.label.push(involve.name),dataDs.fillColor.push(involve.color),dataDs.data.push($scope.chartsData.sports[sport.key].data[involve.id].count),emptyDs.label.push(involve.name),emptyDs.fillColor.push(involve.color),emptyDs.data.push(0),chartData.labels.push(""))}),chartData.datasets.push(dataDs),chartData.datasets.push(emptyDs),charts.push({sport:sport,chartData:{data:chartData,options:{showLabels:$scope.formatValue,scaleLabel:function(obj){return $scope.formatValue(obj.value)}}}})}),$scope.showCharts=!!charts.length&&!!involves.length,$scope.charts=charts;var combineChart={data:{labels:[],datasets:[]},options:{scaleLabel:function(obj){return $scope.formatValue(obj.value)},barWidth:40,barHeight:300,barValueSpacing:30}};combineChart.data.labels=sports.map(function(item){return item.name}),involves.forEach(function(involve){var ds={label:[],fillColor:[],data:[]};sports.forEach(function(sport){ds.label.push(involve.name),ds.fillColor.push(involve.color),ds.data.push($scope.chartsData.sports[sport.key].data[involve.id].count)}),combineChart.data.datasets.push(ds)}),$scope.combineChart=combineChart.data.labels.length>1?combineChart:null}}}angular.module("SportsensusApp").controller("rootingGraphCrtl",rootingGraphCrtl),rootingGraphCrtl.$inject=["$scope","$controller","ParamsSrv","ApiSrv"]}();